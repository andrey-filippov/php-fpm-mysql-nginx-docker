server {
        listen 80 default_server;

        set $root $host;

        # for subdomains we want the document root to be the root domain only (e.g. site.andreyfilippov.com > andreyfilippov.com)
        # but only if the subdomain isn't also a folder in the server root
        # Since we can't do nested ifs in nginx, this is a bit complicated
        set $strip_sub 0;
        set $new_domain 0;
        if ( !-d /var/www/html/$root ) {
                set $strip_sub 1;
        }

        if ( $host ~* "(.+)\.(?<new_domain>(.+)\.([a-z]+|co\.uk))$" ) {
                set $strip_sub "${strip_sub}1";
        }

        if ( $strip_sub = 11 ) {
                set $root $new_domain;
        }
        # end subdomain striping


        client_max_body_size 50M;

        if ( !-d /var/www/html/$root ) {
                set $root 'default';
        }

        include /srv/vhosts/nginx-additions*.conf;

        root /var/www/html/$root;

        index index.php index.html;

        # Block all web requests to hidden directories
        location ~ /\. {
                deny all;
        }

        # Block access to build scripts.
        location ~* /(Gruntfile\.js|package\.json|node_modules) {
                deny all;
                return 404;
        }

        location / {
                try_files $uri $uri/ /index.php?$args;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        location ~ \.php$ {
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass php:9000;

                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;

                # Set server name
                fastcgi_param SERVER_NAME $host;
        }

}
